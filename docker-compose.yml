version: '3'

services:
  app:
    build: .
    container_name: app
    tty: true
    networks:
      - node-nginx
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 5s
      timeout: 5s
      retries: 20
    depends_on:
      db:
        condition: service_healthy
    
  nginx:
    image: nginx:1.17.6-alpine
    container_name: nginx
    restart: always
    ports:
      - 8080:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - node-nginx
    depends_on:
      app:
        condition: service_healthy

  db:
    image: mysql:5.7
    platform: linux/amd64
    command: --innodb-use-native-aio=0
    container_name: db
    restart: always 
    tty: true
    volumes:
      - db:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - MYSQL_DATABASE=nodedb
      - MYSQL_ROOT_PASSWORD=root
    networks:
      - node-nginx
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 20

volumes:
  db:

networks:
  node-nginx:
    driver: bridge